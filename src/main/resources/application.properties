spring.profiles.active=local

#클라이언트에서 세션이 없어지는 주기 = 보통 30분
#너무 늘리면 메모리 부족
server.servlet.session.timeout=30m

# 메모리 성능 유지하면서 세션 늘리기?
# 쿠키 하나 더 쓰면됨 Remember Me
# 쿠키에 인증정보를 담아서 암호화(해싱) 후 담아둠 -> 세션 아이디가 없어졌을 시 해당 쿠키에 있는 정보로 인증 -> 그러면 다시 세션아이디 발급하면서 세션 지속됨
# 근데 이 쿠키가 탈취된다면? 계정뺏긴거랑 똑같

# 안전하게 쿠키 저장하는 법
# 쿠키안에 랜덤 토큰을 만들어서 저장하고 매번 인증할때마다 바꾼다
# 유저네임, 토큰
# 근데 이것도 취약함. 쿠키를 탈취당할시 해커가 쿠키로 인증 -> 유저는 쿠키로 인증 못함

# 조금 더 개선한 방법
# 유저네임, 토큰(랜덤, 매번바뀜), 시리즈(랜덤, 인증할때마다 매번 바뀌지 않고 고정) -> 랜덤값 두개.. 그리고 얘도 해싱이므로 복호화 못함,..
# 쿠키를 탈취 당한 경우, 희생자는 유효하지 않은 토큰(이미 해커가 쿠키 탈취해서 토큰 바뀌어있는 상태)과 *유효한 시리즈와 유저네임*으로 접속
# => 이 경우는 오로지 탈취시에만 일어나는 것! DB에 저장된 쿠키를 다 지워버림. 그럼 해커/유저 둘다 인증 못함..
# 이 경우 모든 토큰을 삭제해서 해커가 더이상 탈취한 쿠키 사용못하게 방지 가능
